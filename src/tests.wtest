import wollok.game.*
import habitacion.*
import asterion.*
import posiciones.*
import artefactos.*

describe "asterion" {

	const habitacion = new Habitacion()
	const nivel1 = new Habitacion()
	const nivel2 = new Habitacion()
	const nivel3 = new Habitacion()
	
	const puerta12 = new Puerta(siguienteHabitacion = nivel2, posicionPuerta= posicionSuperior)
	const puerta21 = new Puerta(siguienteHabitacion = nivel1, posicionPuerta= posicionInferior)
	const puerta23 = new Puerta(siguienteHabitacion= nivel3, posicionPuerta= posicionOeste)
	
	const espada = espadaDeNederita
	
	const humano = new Humano(artefactoADropear = llave, position= game.at(3,6))
	
	method initialize() {
		habitacionFactory.init()
		espada.position(game.at(3,5))
		
		nivel1.agregarPuerta(puerta12)
		nivel2.agregarPuerta(puerta21)
		nivel2.agregarPuerta(puerta23)	
		
		nivel1.agregarCosa(espada)
		nivel2.agregarEnemigo(humano)
	
		habitacionManager.cargarHabitacion(nivel1)
		asterion.habitacionActual(nivel1)
	}
	
	
	test "asterion equipa un arma, quedando su poderPelea() en 20 10 de base y 10 de la espada, puede dropearla quedandose con manos" {
		asterion.equiparArma(espadaDeNederita)
		assert.that(asterion.arma() == espadaDeNederita)
		assert.equals(20, asterion.poderPelea())
		asterion.dropearArma()
		assert.that(asterion.arma() == manos)
	}
	
	test "asterion intenta sacarse un arma teniendo manos y no puede por que no tiene armas" {
		assert.throwsException({asterion.dropearArma()})
	}
	
	test "asterion pasa a la siguiente habitacion" {
		//assert.equals(0, asterion.habitacionActual())
		asterion.position(game.at(5,9))
		console.println(asterion.position())
		asterion.atravesar()
		assert.equals(nivel1, asterion.habitacionActual())
	}	
}

